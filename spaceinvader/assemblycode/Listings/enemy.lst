


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             enemy, CODE, READWRITE
    2 00000000                 extern           Initial_board
    3 00000000                 extern           next_move
    4 00000000                 extern           output_character
    5 00000000                 extern           current_position
    6 00000000                 extern           rng
    7 00000000                 extern           score
    8 00000000                 extern           lives
    9 00000000                 EXPORT           en_move_right
   10 00000000                 EXPORT           en_move_left
   11 00000000                 EXPORT           en_move_down
   12 00000000                 EXPORT           en_amount
   13 00000000                 EXPORT           left_pos
   14 00000000                 EXPORT           right_pos
   15 00000000                 EXPORT           how_many_down_move_left
   16 00000000                 EXPORT           update_en_status
   17 00000000                 EXPORT           left_topmost
   18 00000000                 EXPORT           left2_topmost
   19 00000000                 EXPORT           left3_topmost
   20 00000000                 EXPORT           left4_topmost
   21 00000000                 EXPORT           left5_topmost
   22 00000000                 EXPORT           left6_topmost
   23 00000000                 EXPORT           left7_topmost
   24 00000000                 EXPORT           left_most_colum
   25 00000000                 EXPORT           en_shot
   26 00000000         
   27 00000000 05      how_many_down_move_left
                               =                0x05        ; 
   28 00000001 00 00 00        ALIGN
   29 00000004         
   30 00000004 3B      left_topmost
                               =                0x003B      ;(y,x);
   31 00000005 00 00 00        ALIGN
   32 00000008 3C      left2_topmost
                               =                0x003C      ;(y,x)
   33 00000009 00 00 00        ALIGN
   34 0000000C 3D      left3_topmost
                               =                0x003D      ;(y,x)
   35 0000000D 00 00 00        ALIGN
   36 00000010 3E      left4_topmost
                               =                0x003E      ;(y,x)
   37 00000011 00 00 00        ALIGN
   38 00000014 3F      left5_topmost
                               =                0x003F      ;(y,x)
   39 00000015 00 00 00        ALIGN
   40 00000018 40      left6_topmost
                               =                0x0040      ;(y,x)
   41 00000019 00 00 00        ALIGN
   42 0000001C 41      left7_topmost
                               =                0x0041      ;right most
   43 0000001D 00 00 00        ALIGN
   44 00000020         
   45 00000020 05      left_num
                               =                0x05        ;
   46 00000021 05      left2_num
                               =                0x05        ;
   47 00000022 05      left3_num
                               =                0x05        ;
   48 00000023 05      left4_num



ARM Macro Assembler    Page 2 


                               =                0x05        ;
   49 00000024 05      left5_num
                               =                0x05        ;
   50 00000025 05      left6_num
                               =                0x05        ;
   51 00000026 05      left7_num
                               =                0x05        ;
   52 00000027 00              ALIGN
   53 00000028 41      right_pos
                               =                0x0041      ;41
   54 00000029 00 00 00        ALIGN
   55 0000002C 3B      left_pos
                               =                0x003B      ;3b
   56 0000002D 00 00 00        ALIGN
   57 00000030 04      en_max_length
                               =                0x04
   58 00000031 00 00 00        ALIGN
   59 00000034 23      en_amount
                               =                0x23        ;0x23
   60 00000035 00 00 00        ALIGN
   61 00000038 07      left_most_colum
                               =                7           ;
   62 00000039 00 00 00        ALIGN
   63 0000003C         
   64 0000003C 00      en_bullets_pos
                               =                0x0000
   65 0000003D 00 00 00        ALIGN
   66 00000040 00      en_shooted
                               =                0
   67 00000041 00 00 00        ALIGN
   68 00000044         ; ***************************
   69 00000044         ; Output char to UART0
   70 00000044         ; ARGS  : no
   71 00000044         ; RETURN: no
   72 00000044         ; *************************** 
   73 00000044         ;Move the enemy right, until it hit the wall
   74 00000044         en_move_right
   75 00000044 E92D4FF0        STMFD            SP!, {r4-r11,lr}
   76 00000048         ;check if the rightposition is against the wall
   77 00000048 E59F6BE0        ldr              r6,=Initial_board ; load board
   78 0000004C E59F5BE0        ldr              r5,= right_pos ; load right pos
                                                            ition
   79 00000050 E1D550B0        ldrh             r5,[r5]
   80 00000054 E2855001        add              r5,#1
   81 00000058 E7D67005        ldrb             r7,[r6,r5]
   82 0000005C         ;check if the next move is a wall
   83 0000005C E357007C        cmp              r7,#0x7C
   84 00000060         ;update next_move
   85 00000060 059F5BD0        ldreq            r5,= next_move
   86 00000064 05D54000        ldrbeq           r4,[r5]
   87 00000068 02844001        addeq            r4,#1
   88 0000006C 05C54000        strbeq           r4,[r5]
   89 00000070 0A000049        beq              skip_en_right
   90 00000074         
   91 00000074         
   92 00000074         ;set up the register
   93 00000074 E59F5BB8        ldr              r5,= right_pos ; load right pos
                                                            ition
   94 00000078 E59F8BBC        ldr              r8,=left_pos ; load left positi



ARM Macro Assembler    Page 3 


                                                            on
   95 0000007C E1D570B0        ldrh             r7,[r5]     ; 
   96 00000080 E1A05007        mov              r5,r7       ; let r5 keep track
                                                             of the position le
                                                            ft
   97 00000084 E1D870B0        ldrh             r7,[r8]
   98 00000088 E1A08007        mov              r8,r7       ; let r8 keep track
                                                             of the position ri
                                                            ght
   99 0000008C E3A0A001        mov              r10,#1      ; keep track of col
                                                            um downs; TEMP SOLU
                                                            TION
  100 00000090         
  101 00000090         ;move the row
  102 00000090         rightloop
  103 00000090 E1A07005        mov              r7,r5       ;
  104 00000094 E7D64007        ldrb             r4,[r6,r7]  ; load the right mo
                                                            st register
  105 00000098 E354005E        cmp              r4, #0x5E   ;get rid of bullets
                                                            
  106 0000009C 03A04020        moveq            r4,#0x20
  107 000000A0 E3540056        cmp              r4,#0x56
  108 000000A4 03A04020        moveq            r4,#0x20
  109 000000A8 E2877001        add              r7,#1       ;
  110 000000AC E7C64007        strb             r4,[r6,r7]  ;
  111 000000B0 E1550008        cmp              r5,r8
  112 000000B4 E2455001        sub              r5,#1
  113 000000B8 0A000000        beq              fin
  114 000000BC EAFFFFF3        b                rightloop
  115 000000C0         fin
  116 000000C0 E1A07005        mov              r7,r5       ;
  117 000000C4 E3A04020        mov              r4,#0x20
  118 000000C8 E2877001        add              r7,#1       ;
  119 000000CC E7C64007        strb             r4,[r6,r7]  ;
  120 000000D0         
  121 000000D0         ;set the next rows to move
  122 000000D0         rowloop
  123 000000D0 E59F5B5C        ldr              r5,= right_pos
  124 000000D4 E59F8B60        ldr              r8,=left_pos
  125 000000D8 E1D570B0        ldrh             r7,[r5]
  126 000000DC E1A05007        mov              r5,r7       ; let r5 keep track
                                                             of the position ri
                                                            ght
  127 000000E0 E1D870B0        ldrh             r7,[r8]
  128 000000E4 E1A08007        mov              r8,r7       ; let r8 keep track
                                                             of the position le
                                                            ft
  129 000000E8 E3A09019        mov              r9,#25
  130 000000EC E004099A        mul              r4,r10,r9
  131 000000F0 E0855004        add              r5,r4       ;
  132 000000F4 E004099A        mul              r4,r10,r9
  133 000000F8 E0888004        add              r8,r4
  134 000000FC         
  135 000000FC E28AA001        add              r10,#1      ;TEMP SOLUTION
  136 00000100 E35A0006        cmp              r10,#6      ;temp solution
  137 00000104         
  138 00000104 0A000000        beq              fin2
  139 00000108 EAFFFFE0        b                rightloop
  140 0000010C         



ARM Macro Assembler    Page 4 


  141 0000010C         fin2
  142 0000010C         ;update left position and right position
  143 0000010C E59F5B20        ldr              r5,= right_pos
  144 00000110 E1D570B0        ldrh             r7,[r5]
  145 00000114 E2877001        add              r7,#1       ;
  146 00000118 E1C570B0        strh             r7,[r5]     ;
  147 0000011C E59F5B18        ldr              r5,= left_pos
  148 00000120 E1D570B0        ldrh             r7,[r5]
  149 00000124 E2877001        add              r7,#1       ;
  150 00000128 E1C570B0        strh             r7,[r5]     ;
  151 0000012C         ;update 7 enemy position
  152 0000012C E59F5B0C        ldr              r5,=left_topmost
  153 00000130 E1D570B0        ldrh             r7,[r5]
  154 00000134 E2877001        add              r7,#1
  155 00000138 E1C570B0        strh             r7,[r5]
  156 0000013C E59F5B00        ldr              r5,=left2_topmost
  157 00000140 E1D570B0        ldrh             r7,[r5]
  158 00000144 E2877001        add              r7,#1
  159 00000148 E1C570B0        strh             r7,[r5]
  160 0000014C E59F5AF4        ldr              r5,=left3_topmost
  161 00000150 E1D570B0        ldrh             r7,[r5]
  162 00000154 E2877001        add              r7,#1
  163 00000158 E1C570B0        strh             r7,[r5]
  164 0000015C E59F5AE8        ldr              r5,=left4_topmost
  165 00000160 E1D570B0        ldrh             r7,[r5]
  166 00000164 E2877001        add              r7,#1
  167 00000168 E1C570B0        strh             r7,[r5]
  168 0000016C E59F5ADC        ldr              r5,=left5_topmost
  169 00000170 E1D570B0        ldrh             r7,[r5]
  170 00000174 E2877001        add              r7,#1
  171 00000178 E1C570B0        strh             r7,[r5]
  172 0000017C E59F5AD0        ldr              r5,=left6_topmost
  173 00000180 E1D570B0        ldrh             r7,[r5]
  174 00000184 E2877001        add              r7,#1
  175 00000188 E1C570B0        strh             r7,[r5]
  176 0000018C E59F5AC4        ldr              r5,=left7_topmost
  177 00000190 E1D570B0        ldrh             r7,[r5]
  178 00000194 E2877001        add              r7,#1
  179 00000198 E1C570B0        strh             r7,[r5]
  180 0000019C         skip_en_right
  181 0000019C         
  182 0000019C E8BD4FF0        LDMFD            SP!,  {r4-r11,lr}
  183 000001A0 E12FFF1E        BX               lr
  184 000001A4         
  185 000001A4         ; ***********Move_right****************
  186 000001A4         
  187 000001A4         
  188 000001A4         
  189 000001A4         ; ***************************
  190 000001A4         ; Output char to UART0
  191 000001A4         ; ARGS  : no
  192 000001A4         ; RETURN: no
  193 000001A4         ; *************************** 
  194 000001A4         ;Move the enemy left, until it hit the wall
  195 000001A4         en_move_left
  196 000001A4 E92D47F0        STMFD            SP!, {r4-r10,lr}
  197 000001A8         ;check if the leftposition is against the wall
  198 000001A8 E59F6A80        ldr              r6,=Initial_board ; load board
  199 000001AC E59F5A88        ldr              r5,= left_pos ; load left posit



ARM Macro Assembler    Page 5 


                                                            ion
  200 000001B0 E1D550B0        ldrh             r5,[r5]
  201 000001B4 E2455001        sub              r5,#1
  202 000001B8 E7D67005        ldrb             r7,[r6,r5]
  203 000001BC E357007C        cmp              r7,#0x7C
  204 000001C0 059F5A70        ldreq            r5,= next_move
  205 000001C4 05D54000        ldrbeq           r4,[r5]
  206 000001C8 02844001        addeq            r4,#1
  207 000001CC 05C54000        strbeq           r4,[r5]
  208 000001D0 0A000049        beq              skip_en_left
  209 000001D4         
  210 000001D4         ;set up the register
  211 000001D4 E59F5A60        ldr              r5,= left_pos ; load left posit
                                                            ion
  212 000001D8 E59F8A54        ldr              r8,=right_pos ; load left posit
                                                            ion
  213 000001DC E1D570B0        ldrh             r7,[r5]     ; 
  214 000001E0 E1A05007        mov              r5,r7       ; let r5 keep track
                                                             of the position le
                                                            ft
  215 000001E4 E1D870B0        ldrh             r7,[r8]
  216 000001E8 E1A08007        mov              r8,r7       ; let r8 keep track
                                                             of the position ri
                                                            ght
  217 000001EC         
  218 000001EC E3A0A001        mov              r10,#1      ; keep track of col
                                                            um downs; TEMP SOLU
                                                            TION
  219 000001F0         ;move the row
  220 000001F0         leftloop
  221 000001F0 E1A07005        mov              r7,r5       ;
  222 000001F4 E7D64007        ldrb             r4,[r6,r7]  ; load the left mos
                                                            t register
  223 000001F8 E354005E        cmp              r4, #0x5E   ;get rid of bullets
                                                            
  224 000001FC 03A04020        moveq            r4,#0x20    ;get rid of bullets
                                                            
  225 00000200 E3540056        cmp              r4,#0x56
  226 00000204 03A04020        moveq            r4,#0x20
  227 00000208 E2477001        sub              r7,#1       ;
  228 0000020C E7C64007        strb             r4,[r6,r7]  ;
  229 00000210 E1550008        cmp              r5,r8
  230 00000214 E2855001        add              r5,#1
  231 00000218 0A000000        beq              left_fin
  232 0000021C EAFFFFF3        b                leftloop
  233 00000220         left_fin
  234 00000220 E1A07005        mov              r7,r5       ;
  235 00000224 E3A04020        mov              r4,#0x20
  236 00000228 E2477001        sub              r7,#1       ;
  237 0000022C E7C64007        strb             r4,[r6,r7]  ;
  238 00000230         
  239 00000230         ;set the next rows to move
  240 00000230         rowloop2
  241 00000230 E59F5A04        ldr              r5,=left_pos
  242 00000234 E59F89F8        ldr              r8,=right_pos
  243 00000238 E1D570B0        ldrh             r7,[r5]
  244 0000023C E1A05007        mov              r5,r7       ; let r5 keep track
                                                             of the position le
                                                            ft



ARM Macro Assembler    Page 6 


  245 00000240 E1D870B0        ldrh             r7,[r8]
  246 00000244 E1A08007        mov              r8,r7       ; let r8 keep track
                                                             of the position ri
                                                            ght
  247 00000248 E3A09019        mov              r9,#25
  248 0000024C E004099A        mul              r4,r10,r9
  249 00000250 E0855004        add              r5,r4       ;
  250 00000254 E004099A        mul              r4,r10,r9
  251 00000258 E0888004        add              r8,r4
  252 0000025C         
  253 0000025C E28AA001        add              r10,#1      ;TEMP SOLUTION
  254 00000260 E35A0006        cmp              r10,#6      ;temp solution
  255 00000264         
  256 00000264 0A000000        beq              left_fin2
  257 00000268 EAFFFFE0        b                leftloop
  258 0000026C         
  259 0000026C         left_fin2
  260 0000026C         ;update left and right position
  261 0000026C E59F59C8        ldr              r5,= left_pos
  262 00000270 E1D570B0        ldrh             r7,[r5]
  263 00000274 E2477001        sub              r7,#1       ;
  264 00000278 E1C570B0        strh             r7,[r5]     ;
  265 0000027C E59F59B0        ldr              r5,= right_pos
  266 00000280 E1D570B0        ldrh             r7,[r5]
  267 00000284 E2477001        sub              r7,#1       ;
  268 00000288 E1C570B0        strh             r7,[r5]     ;
  269 0000028C         ;update 7 enemy position
  270 0000028C E59F59AC        ldr              r5,=left_topmost
  271 00000290 E1D570B0        ldrh             r7,[r5]
  272 00000294 E2477001        add              r7,#-1
  273 00000298 E1C570B0        strh             r7,[r5]
  274 0000029C E59F59A0        ldr              r5,=left2_topmost
  275 000002A0 E1D570B0        ldrh             r7,[r5]
  276 000002A4 E2477001        add              r7,#-1
  277 000002A8 E1C570B0        strh             r7,[r5]
  278 000002AC E59F5994        ldr              r5,=left3_topmost
  279 000002B0 E1D570B0        ldrh             r7,[r5]
  280 000002B4 E2477001        add              r7,#-1
  281 000002B8 E1C570B0        strh             r7,[r5]
  282 000002BC E59F5988        ldr              r5,=left4_topmost
  283 000002C0 E1D570B0        ldrh             r7,[r5]
  284 000002C4 E2477001        add              r7,#-1
  285 000002C8 E1C570B0        strh             r7,[r5]
  286 000002CC E59F597C        ldr              r5,=left5_topmost
  287 000002D0 E1D570B0        ldrh             r7,[r5]
  288 000002D4 E2477001        add              r7,#-1
  289 000002D8 E1C570B0        strh             r7,[r5]
  290 000002DC E59F5970        ldr              r5,=left6_topmost
  291 000002E0 E1D570B0        ldrh             r7,[r5]
  292 000002E4 E2477001        add              r7,#-1
  293 000002E8 E1C570B0        strh             r7,[r5]
  294 000002EC E59F5964        ldr              r5,=left7_topmost
  295 000002F0 E1D570B0        ldrh             r7,[r5]
  296 000002F4 E2477001        add              r7,#-1
  297 000002F8 E1C570B0        strh             r7,[r5]
  298 000002FC         skip_en_left
  299 000002FC E8BD47F0        LDMFD            SP!,  {r4-r10,lr}
  300 00000300 E12FFF1E        BX               lr
  301 00000304         



ARM Macro Assembler    Page 7 


  302 00000304         ;*************Move_left*********88
  303 00000304         
  304 00000304         
  305 00000304         ;**********************
  306 00000304         ; Enemy Down
  307 00000304         ; ARGS  : no
  308 00000304         ; RETURN: no
  309 00000304         ;********************
  310 00000304         en_move_down
  311 00000304 E92D4000        STMFD            SP!,{lr}
  312 00000308         ;every down is updating the cycle
  313 00000308 E59F5928        ldr              r5,= next_move
  314 0000030C E5D54000        ldrb             r4,[r5]
  315 00000310 E2844001        add              r4,#1
  316 00000314 E5C54000        strb             r4,[r5]
  317 00000318         
  318 00000318         
  319 00000318         ;check if there is more any down move left
  320 00000318 E59F493C        ldr              r4,=how_many_down_move_left
  321 0000031C E5D45000        ldrb             r5,[r4]     ;
  322 00000320 E3550000        cmp              r5,#0       ;
  323 00000324 0A000047        beq              down_skip
  324 00000328         ;initialize variables for position
  325 00000328 E59F6900        ldr              r6,=Initial_board
  326 0000032C E59F4900        ldr              r4,=right_pos
  327 00000330 E1D450B0        ldrh             r5,[r4]     ;let r5 keep tract 
                                                            of right pos
  328 00000334 E59F4900        ldr              r4,=left_pos
  329 00000338 E1D470B0        ldrh             r7,[r4]     ; let r7 keep track
                                                             of left pos
  330 0000033C         ;moving one colum down from left
  331 0000033C E59F491C        ldr              r4,=en_max_length
  332 00000340 E5D48000        ldrb             r8,[r4]     ; r8 contain enemy 
                                                            max length
  333 00000344 E1A09008        mov              r9,r8       ; r9 keep track ene
                                                            my max length
  334 00000348         
  335 00000348         ;moving left most unmove colums
  336 00000348         mo_col
  337 00000348 E1A08009        mov              r8,r9       ; let r9 keep track
                                                             of max lengh
  338 0000034C E3A04019        mov              r4,#25
  339 00000350 E0080894        mul              r8,r4,r8    ;
  340 00000354 E0874008        add              r4,r7,r8
  341 00000358 E7D68004        ldrb             r8,[r6,r4]
  342 0000035C E2844019        add              r4,#25
  343 00000360 E7C68004        strb             r8,[r6,r4]
  344 00000364 E2499001        sub              r9 ,#1      ;
  345 00000368 E3790001        cmp              r9,#-1      ;
  346 0000036C 1AFFFFF5        bne              mo_col
  347 00000370         ;replace the top colom with space
  348 00000370         re_s
  349 00000370 E1A08009        mov              r8,r9       ; let r9 keep track
                                                             of max lengh
  350 00000374 E3A04019        mov              r4,#25
  351 00000378 E0080894        mul              r8,r4,r8    ;
  352 0000037C E0874008        add              r4,r7,r8
  353 00000380 E7D68004        ldrb             r8,[r6,r4]
  354 00000384 E2844019        add              r4,#25



ARM Macro Assembler    Page 8 


  355 00000388 E7C68004        strb             r8,[r6,r4]
  356 0000038C         
  357 0000038C         ;go to next colum and do it again refresh the max length
                       
  358 0000038C E1570005        cmp              r7,r5       ;
  359 00000390 E2877001        add              r7,#1       ;
  360 00000394 0A000003        beq              down_done
  361 00000398 E59F48C0        ldr              r4,=en_max_length
  362 0000039C E5D48000        ldrb             r8,[r4]     ; r8 contain enemy 
                                                            max length
  363 000003A0 E1A09008        mov              r9,r8       ; r9 keep track ene
                                                            my max length
  364 000003A4 EAFFFFE7        b                mo_col
  365 000003A8         
  366 000003A8         down_done
  367 000003A8         ;update the constant
  368 000003A8 E59F4884        ldr              r4,=right_pos
  369 000003AC E1D450B0        ldrh             r5,[r4]
  370 000003B0 E2855019        add              r5,#25
  371 000003B4 E1C450B0        strh             r5,[r4]
  372 000003B8 E59F487C        ldr              r4,=left_pos
  373 000003BC E1D450B0        ldrh             r5,[r4]
  374 000003C0 E2855019        add              r5,#25
  375 000003C4 E1C450B0        strh             r5,[r4]
  376 000003C8 E59F488C        ldr              r4,=how_many_down_move_left
  377 000003CC E5D45000        ldrb             r5,[r4]     ;
  378 000003D0 E2455001        sub              r5,#1       ;
  379 000003D4 E5C45000        strb             r5,[r4]     ;
  380 000003D8         
  381 000003D8         ;update 7 enemy position
  382 000003D8 E59F5860        ldr              r5,=left_topmost
  383 000003DC E1D570B0        ldrh             r7,[r5]
  384 000003E0 E2877019        add              r7,#25
  385 000003E4 E1C570B0        strh             r7,[r5]
  386 000003E8 E59F5854        ldr              r5,=left2_topmost
  387 000003EC E1D570B0        ldrh             r7,[r5]
  388 000003F0 E2877019        add              r7,#25
  389 000003F4 E1C570B0        strh             r7,[r5]
  390 000003F8 E59F5848        ldr              r5,=left3_topmost
  391 000003FC E1D570B0        ldrh             r7,[r5]
  392 00000400 E2877019        add              r7,#25
  393 00000404 E1C570B0        strh             r7,[r5]
  394 00000408 E59F583C        ldr              r5,=left4_topmost
  395 0000040C E1D570B0        ldrh             r7,[r5]
  396 00000410 E2877019        add              r7,#25
  397 00000414 E1C570B0        strh             r7,[r5]
  398 00000418 E59F5830        ldr              r5,=left5_topmost
  399 0000041C E1D570B0        ldrh             r7,[r5]
  400 00000420 E2877019        add              r7,#25
  401 00000424 E1C570B0        strh             r7,[r5]
  402 00000428 E59F5824        ldr              r5,=left6_topmost
  403 0000042C E1D570B0        ldrh             r7,[r5]
  404 00000430 E2877019        add              r7,#25
  405 00000434 E1C570B0        strh             r7,[r5]
  406 00000438 E59F5818        ldr              r5,=left7_topmost
  407 0000043C E1D570B0        ldrh             r7,[r5]
  408 00000440 E2877019        add              r7,#25
  409 00000444 E1C570B0        strh             r7,[r5]
  410 00000448         



ARM Macro Assembler    Page 9 


  411 00000448         down_skip
  412 00000448 E8BD4000        LDMFD            SP!,{lr}
  413 0000044C E12FFF1E        BX               lr
  414 00000450         ;###########down done##############
  415 00000450         
  416 00000450         
  417 00000450         
  418 00000450         ;######################
  419 00000450         ;update the enemy status
  420 00000450         ; return none
  421 00000450         ; arg none
  422 00000450         ;######################
  423 00000450         update_en_status
  424 00000450 E92D41B0        STMFD            SP!,{R4,R5,R7,R8,LR}
  425 00000454         ;check from the 7 -all the way to 1 being the right most
                       
  426 00000454 E59F7808        ldr              r7,= left_most_colum
  427 00000458 E5D78000        ldrb             r8,[r7]     ;
  428 0000045C E3580006        cmp              r8,#6
  429 00000460 0A000016        beq              left2
  430 00000464 E3580005        cmp              r8,#5
  431 00000468 0A00002D        beq              left3
  432 0000046C E3580004        cmp              r8,#4
  433 00000470 0A000042        beq              left4
  434 00000474 E3580003        cmp              r8,#3
  435 00000478 0A000055        beq              left5
  436 0000047C E3580002        cmp              r8,#2
  437 00000480 0A000066        beq              left6
  438 00000484 E3580001        cmp              r8,#1
  439 00000488 0A000079        beq              left7
  440 0000048C         
  441 0000048C E59F47AC        ldr              r4,= left_topmost
  442 00000490 E1D450B0        ldrh             r5,[r4]     ;  ;r5 have left po
                                                            s
  443 00000494 E59F6794        ldr              r6,=Initial_board
  444 00000498 E7D65005        ldrb             r5,[r6,r5]  ; r5 have the left 
                                                            char
  445 0000049C E3550020        cmp              r5,#0x20
  446 000004A0 059F4794        ldreq            r4,=left_pos
  447 000004A4 05945000        ldreq            r5,[r4]     ;
  448 000004A8 02855001        addeq            r5,#1       ;
  449 000004AC 01C450B0        strheq           r5,[r4]     ; update left pos
  450 000004B0 02488001        subeq            r8,#1
  451 000004B4 05C78000        strbeq           r8,[r7]
  452 000004B8 E8BD41B0        LDMFD            SP!,{R4,R5,R7,R8,LR}
  453 000004BC E12FFF1E        BX               LR
  454 000004C0         
  455 000004C0         left2
  456 000004C0 E59F779C        ldr              r7,= left_most_colum
  457 000004C4 E5D78000        ldrb             r8,[r7]     ;
  458 000004C8 E3580005        cmp              r8,#5
  459 000004CC 0A000014        beq              left3
  460 000004D0 E3580004        cmp              r8,#4
  461 000004D4 0A000029        beq              left4
  462 000004D8 E3580003        cmp              r8,#3
  463 000004DC 0A00003C        beq              left5
  464 000004E0 E3580002        cmp              r8,#2
  465 000004E4 0A00004D        beq              left6
  466 000004E8 E3580001        cmp              r8,#1



ARM Macro Assembler    Page 10 


  467 000004EC 0A000060        beq              left7
  468 000004F0         
  469 000004F0 E59F474C        ldr              r4,= left2_topmost
  470 000004F4 E1D450B0        ldrh             r5,[r4]     ;  ;r5 have left po
                                                            s
  471 000004F8 E59F6730        ldr              r6,=Initial_board
  472 000004FC E7D65005        ldrb             r5,[r6,r5]  ; r5 have the left 
                                                            char
  473 00000500 E3550020        cmp              r5,#0x20
  474 00000504 059F4730        ldreq            r4,=left_pos
  475 00000508 05945000        ldreq            r5,[r4]     ;
  476 0000050C 02855001        addeq            r5,#1       ;
  477 00000510 01C450B0        strheq           r5,[r4]     ; update left pos
  478 00000514 02488001        subeq            r8,#1
  479 00000518 05C78000        strbeq           r8,[r7]
  480 0000051C         
  481 0000051C         
  482 0000051C E8BD41B0        LDMFD            SP!,{R4,R5,R7,R8,LR}
  483 00000520 E12FFF1E        BX               LR
  484 00000524         
  485 00000524         
  486 00000524         left3
  487 00000524 E59F7738        ldr              r7,= left_most_colum
  488 00000528 E5D78000        ldrb             r8,[r7]     ;
  489 0000052C E3580004        cmp              r8,#4
  490 00000530 0A000012        beq              left4
  491 00000534 E3580003        cmp              r8,#3
  492 00000538 0A000025        beq              left5
  493 0000053C E3580002        cmp              r8,#2
  494 00000540 0A000036        beq              left6
  495 00000544 E3580001        cmp              r8,#1
  496 00000548 0A000049        beq              left7
  497 0000054C         
  498 0000054C E59F46F4        ldr              r4,= left3_topmost
  499 00000550 E1D450B0        ldrh             r5,[r4]     ;  ;r5 have left po
                                                            s
  500 00000554 E59F66D4        ldr              r6,=Initial_board
  501 00000558 E7D65005        ldrb             r5,[r6,r5]  ; r5 have the left 
                                                            char
  502 0000055C E3550020        cmp              r5,#0x20
  503 00000560 059F46D4        ldreq            r4,=left_pos
  504 00000564 05945000        ldreq            r5,[r4]     ;
  505 00000568 02855001        addeq            r5,#1       ;
  506 0000056C 01C450B0        strheq           r5,[r4]     ; update left pos
  507 00000570         
  508 00000570 02488001        subeq            r8,#1
  509 00000574 05C78000        strbeq           r8,[r7]
  510 00000578 E8BD41B0        LDMFD            SP!,{R4,R5,R7,R8,LR}
  511 0000057C E12FFF1E        BX               LR
  512 00000580         
  513 00000580         left4
  514 00000580 E59F76DC        ldr              r7,= left_most_colum
  515 00000584 E5D78000        ldrb             r8,[r7]     ;
  516 00000588 E3580003        cmp              r8,#3
  517 0000058C 0A000010        beq              left5
  518 00000590 E3580002        cmp              r8,#2
  519 00000594 0A000021        beq              left6
  520 00000598 E3580001        cmp              r8,#1
  521 0000059C 0A000034        beq              left7



ARM Macro Assembler    Page 11 


  522 000005A0         
  523 000005A0 E59F46A4        ldr              r4,= left4_topmost
  524 000005A4 E1D450B0        ldrh             r5,[r4]     ;  ;r5 have left po
                                                            s
  525 000005A8 E59F6680        ldr              r6,=Initial_board
  526 000005AC E7D65005        ldrb             r5,[r6,r5]  ; r5 have the left 
                                                            char
  527 000005B0 E3550020        cmp              r5,#0x20
  528 000005B4 059F4680        ldreq            r4,=left_pos
  529 000005B8 05945000        ldreq            r5,[r4]     ;
  530 000005BC 02855001        addeq            r5,#1       ;
  531 000005C0 01C450B0        strheq           r5,[r4]     ; update left pos
  532 000005C4         
  533 000005C4 02488001        subeq            r8,#1
  534 000005C8 05C78000        strbeq           r8,[r7]
  535 000005CC E8BD41B0        LDMFD            SP!,{R4,R5,R7,R8,LR}
  536 000005D0 E12FFF1E        BX               LR
  537 000005D4         
  538 000005D4         left5
  539 000005D4 E59F7688        ldr              r7,= left_most_colum
  540 000005D8 E5D78000        ldrb             r8,[r7]     ;
  541 000005DC E3580002        cmp              r8,#2
  542 000005E0 0A00000E        beq              left6
  543 000005E4 E3580001        cmp              r8,#1
  544 000005E8 0A000021        beq              left7
  545 000005EC         
  546 000005EC E59F465C        ldr              r4,= left5_topmost
  547 000005F0 E1D450B0        ldrh             r5,[r4]     ;  ;r5 have left po
                                                            s
  548 000005F4 E59F6634        ldr              r6,=Initial_board
  549 000005F8 E7D65005        ldrb             r5,[r6,r5]  ; r5 have the left 
                                                            char
  550 000005FC E3550020        cmp              r5,#0x20
  551 00000600 059F4634        ldreq            r4,=left_pos
  552 00000604 05945000        ldreq            r5,[r4]     ;
  553 00000608 02855001        addeq            r5,#1       ;
  554 0000060C 01C450B0        strheq           r5,[r4]     ; update left pos
  555 00000610         
  556 00000610 02488001        subeq            r8,#1
  557 00000614 05C78000        strbeq           r8,[r7]
  558 00000618 E8BD41B0        LDMFD            SP!,{R4,R5,R7,R8,LR}
  559 0000061C E12FFF1E        BX               LR
  560 00000620         
  561 00000620         left6
  562 00000620 E59F763C        ldr              r7,= left_most_colum
  563 00000624 E5D78000        ldrb             r8,[r7]     ;
  564 00000628 E3580001        cmp              r8,#1
  565 0000062C 0A000010        beq              left7
  566 00000630         
  567 00000630 E59F762C        ldr              r7,= left_most_colum
  568 00000634 E5D78000        ldrb             r8,[r7]     ;
  569 00000638 E3580003        cmp              r8,#3
  570 0000063C 0AFFFFE4        beq              left5
  571 00000640         
  572 00000640 E59F460C        ldr              r4,= left6_topmost
  573 00000644 E1D450B0        ldrh             r5,[r4]     ;  ;r5 have left po
                                                            s
  574 00000648 E59F65E0        ldr              r6,=Initial_board
  575 0000064C E7D65005        ldrb             r5,[r6,r5]  ; r5 have the left 



ARM Macro Assembler    Page 12 


                                                            char
  576 00000650 E3550020        cmp              r5,#0x20
  577 00000654 059F45E0        ldreq            r4,=left_pos
  578 00000658 05945000        ldreq            r5,[r4]     ;
  579 0000065C 02855001        addeq            r5,#1       ;
  580 00000660 01C450B0        strheq           r5,[r4]     ; update left pos
  581 00000664         
  582 00000664         
  583 00000664 02488001        subeq            r8,#1
  584 00000668 05C78000        strbeq           r8,[r7]
  585 0000066C E8BD41B0        LDMFD            SP!,{R4,R5,R7,R8,LR}
  586 00000670 E12FFF1E        BX               LR
  587 00000674         
  588 00000674         left7
  589 00000674         ;last colum don't need to change
  590 00000674         
  591 00000674 E8BD41B0        LDMFD            SP!,{R4,R5,R7,R8,LR}
  592 00000678 E12FFF1E        BX               LR
  593 0000067C         ;############update enemy status########END#############
                         
  594 0000067C         ;en_sho
  595 0000067C         ;return none
  596 0000067C         ; arg none
  597 0000067C         en_shot
  598 0000067C         ;initial bullets position
  599 0000067C E92D43FF        STMFD            SP!,{r0-r9,LR}
  600 00000680 E59F85E0        ldr              r8,=en_shooted
  601 00000684 E5D89000        ldrb             r9,[r8]
  602 00000688 E3590001        cmp              r9,#1
  603 0000068C 0A000008        beq              shooting
  604 00000690 E59F45A8        ldr              r4,=left_topmost
  605 00000694 E3A00007        mov              r0,#7       ;rng
  606 00000698 EBFFFFFE        bl               rng
  607 0000069C E1D450B0        ldrh             r5,[r4]
  608 000006A0 E0855000        add              r5,r0       ; rng
  609 000006A4 E59F45C0        ldr              r4,=en_bullets_pos
  610 000006A8 E1C450B0        strh             r5,[r4]
  611 000006AC         ;updates flag
  612 000006AC E3A09001        mov              r9,#1
  613 000006B0 E5C89000        strb             r9,[r8]
  614 000006B4         shooting
  615 000006B4 E59F45B0        ldr              r4,=en_bullets_pos
  616 000006B8 E1D450B0        ldrh             r5,[r4]
  617 000006BC E2855019        add              r5,#25      ;
  618 000006C0         
  619 000006C0 E59F6568        ldr              r6,=Initial_board
  620 000006C4 E7D67005        ldrb             r7,[r6,r5]
  621 000006C8 E3570053        cmp              r7,#0x53
  622 000006CC 0A00013A        beq              s_hit
  623 000006D0 E3570073        cmp              r7,#0x73
  624 000006D4 0A000143        beq              S_hit
  625 000006D8 E357005E        cmp              r7,#0x5E
  626 000006DC 0A00014C        beq              bull_hit
  627 000006E0 E3570020        cmp              r7,#0x20
  628 000006E4 03A08056        moveq            r8,#0x56
  629 000006E8 07C68005        strbeq           r8,[r6,r5]  ;
  630 000006EC E1C450B0        strh             r5,[r4]     ;update enemy curre
                                                            nt position
  631 000006F0         ;get rid of bullets



ARM Macro Assembler    Page 13 


  632 000006F0 E2455019        sub              r5,#25
  633 000006F4 E7D67005        ldrb             r7,[r6,r5]
  634 000006F8 E3570056        cmp              r7,#0x56
  635 000006FC 03A07020        moveq            r7,#0x20
  636 00000700 07C67005        strbeq           r7,[r6,r5]
  637 00000704         
  638 00000704         
  639 00000704         
  640 00000704         
  641 00000704 E59F7564        ldr              r7,=0x0179
  642 00000708 E1550007        cmp              r5,r7
  643 0000070C 0A00003A        beq              en_shot_hit0x79
  644 00000710 E59F755C        ldr              r7,=0x017A
  645 00000714 E1550007        cmp              r5,r7
  646 00000718 0A000043        beq              en_shot_hit0x7A
  647 0000071C E59F7554        ldr              r7,=0x017B
  648 00000720 E1550007        cmp              r5,r7
  649 00000724 0A00004C        beq              en_shot_hit0x7B
  650 00000728 E3A07F5F        ldr              r7,=0x017C
  651 0000072C E1550007        cmp              r5,r7
  652 00000730 0A000055        beq              en_shot_hit0x7C
  653 00000734 E59F7540        ldr              r7,=0x017D
  654 00000738 E1550007        cmp              r5,r7
  655 0000073C 0A00005E        beq              en_shot_hit0x7D
  656 00000740 E59F7538        ldr              r7,=0x017E
  657 00000744 E1550007        cmp              r5,r7
  658 00000748 0A000067        beq              en_shot_hit0x7E
  659 0000074C E59F7530        ldr              r7,= 0x017F
  660 00000750 E1550007        cmp              r5,r7
  661 00000754 0A000070        beq              en_shot_hit0x7F
  662 00000758 E3A07D06        ldr              r7,=0x0180
  663 0000075C E1550007        cmp              r5,r7
  664 00000760 0A000079        beq              en_shot_hit0x80
  665 00000764 E59F751C        ldr              r7,=0x0181
  666 00000768 E1550007        cmp              r5,r7
  667 0000076C 0A000082        beq              en_shot_hit0x81
  668 00000770 E59F7514        ldr              r7,= 0x0182
  669 00000774 E1550007        cmp              r5,r7
  670 00000778 0A00008B        beq              en_shot_hit0x82
  671 0000077C E59F750C        ldr              r7,=0x0183
  672 00000780 E1550007        cmp              r5,r7
  673 00000784 0A000094        beq              en_shot_hit0x83
  674 00000788 E3A07F61        ldr              r7,=0x0184
  675 0000078C E1550007        cmp              r5,r7
  676 00000790 0A00009D        beq              en_shot_hit0x84
  677 00000794 E59F74F8        ldr              r7,=0x0185
  678 00000798 E1550007        cmp              r5,r7
  679 0000079C 0A0000A6        beq              en_shot_hit0x85
  680 000007A0 E59F74F0        ldr              r7,=0x0186
  681 000007A4 E1550007        cmp              r5,r7
  682 000007A8 0A0000AF        beq              en_shot_hit0x86
  683 000007AC E59F74E8        ldr              r7,=0x0187
  684 000007B0 E1550007        cmp              r5,r7
  685 000007B4 0A0000B8        beq              en_shot_hit0x87
  686 000007B8 E3A07F62        ldr              r7,=0x0188
  687 000007BC E1550007        cmp              r5,r7
  688 000007C0 0A0000C1        beq              en_shot_hit0x88
  689 000007C4 E59F74D4        ldr              r7,= 0x0189
  690 000007C8 E1550007        cmp              r5,r7



ARM Macro Assembler    Page 14 


  691 000007CC 0A0000CA        beq              en_shot_hit0x89
  692 000007D0 E59F74CC        ldr              r7,=0x018A
  693 000007D4 E1550007        cmp              r5,r7
  694 000007D8 0A0000D3        beq              en_shot_hit0x8A
  695 000007DC E59F74C4        ldr              r7,=0x018B
  696 000007E0 E1550007        cmp              r5,r7
  697 000007E4 0A0000DC        beq              en_shot_hit0x8B
  698 000007E8 E3A07F63        ldr              r7,=0x018C
  699 000007EC E1550007        cmp              r5,r7
  700 000007F0 0A0000E5        beq              en_shot_hit0x8C
  701 000007F4         
  702 000007F4         
  703 000007F4         
  704 000007F4         
  705 000007F4         
  706 000007F4 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  707 000007F8 E12FFF1E        BX               LR
  708 000007FC         ;________________________________________- 
  709 000007FC         en_shot_hit0x79
  710 000007FC E59F44A8        ldr              r4,=current_position
  711 00000800 E5D45000        ldrb             r5,[r4]
  712 00000804 E3550001        cmp              r5,#0x01
  713 00000808 059F24A0        ldreq            r2,=lives
  714 0000080C 05D21000        ldrbeq           r1,[r2]
  715 00000810 02411001        subeq            r1,#1
  716 00000814 05C21000        strbeq           r1,[r2]
  717 00000818         ;-------------------------update bullets enable
  718 00000818 E59F8448        ldr              r8,=en_shooted
  719 0000081C E3A09000        mov              r9,#0
  720 00000820 E5C89000        strb             r9,[r8]
  721 00000824         
  722 00000824         
  723 00000824 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  724 00000828 E12FFF1E        BX               LR
  725 0000082C         ;__________________________________________ 
  726 0000082C         en_shot_hit0x7A
  727 0000082C E59F4478        ldr              r4,=current_position
  728 00000830 E5D45000        ldrb             r5,[r4]
  729 00000834 E3550002        cmp              r5,#0x02
  730 00000838 059F2470        ldreq            r2,=lives
  731 0000083C 05D21000        ldrbeq           r1,[r2]
  732 00000840 02411001        subeq            r1,#1
  733 00000844 05C21000        strbeq           r1,[r2]
  734 00000848         ;-------------------------update bullets enable
  735 00000848 E59F8418        ldr              r8,=en_shooted
  736 0000084C E3A09000        mov              r9,#0
  737 00000850 E5C89000        strb             r9,[r8]
  738 00000854         
  739 00000854         
  740 00000854         
  741 00000854 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  742 00000858 E12FFF1E        BX               LR
  743 0000085C         ;_______________________________________ 
  744 0000085C         en_shot_hit0x7B
  745 0000085C E59F4448        ldr              r4,=current_position
  746 00000860 E5D45000        ldrb             r5,[r4]
  747 00000864 E3550003        cmp              r5,#0x03
  748 00000868 059F2440        ldreq            r2,=lives
  749 0000086C 05D21000        ldrbeq           r1,[r2]



ARM Macro Assembler    Page 15 


  750 00000870 02411001        subeq            r1,#1
  751 00000874 05C21000        strbeq           r1,[r2]
  752 00000878         ;-------------------------update bullets enable
  753 00000878 E59F83E8        ldr              r8,=en_shooted
  754 0000087C E3A09000        mov              r9,#0
  755 00000880 E5C89000        strb             r9,[r8]
  756 00000884         
  757 00000884         
  758 00000884 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  759 00000888 E12FFF1E        BX               LR
  760 0000088C         ;__________________________________ 
  761 0000088C         en_shot_hit0x7C
  762 0000088C E59F4418        ldr              r4,=current_position
  763 00000890 E5D45000        ldrb             r5,[r4]
  764 00000894 E3550004        cmp              r5,#0x04
  765 00000898 059F2410        ldreq            r2,=lives
  766 0000089C 05D21000        ldrbeq           r1,[r2]
  767 000008A0 02411001        subeq            r1,#1
  768 000008A4 05C21000        strbeq           r1,[r2]
  769 000008A8         ;-------------------------update bullets enable
  770 000008A8 E59F83B8        ldr              r8,=en_shooted
  771 000008AC E3A09000        mov              r9,#0
  772 000008B0 E5C89000        strb             r9,[r8]
  773 000008B4         
  774 000008B4         
  775 000008B4 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  776 000008B8 E12FFF1E        BX               LR
  777 000008BC         ;_________________________________ 
  778 000008BC         en_shot_hit0x7D
  779 000008BC E59F43E8        ldr              r4,=current_position
  780 000008C0 E5D45000        ldrb             r5,[r4]
  781 000008C4 E3550005        cmp              r5,#0x05
  782 000008C8 059F23E0        ldreq            r2,=lives
  783 000008CC 05D21000        ldrbeq           r1,[r2]
  784 000008D0 02411001        subeq            r1,#1
  785 000008D4 05C21000        strbeq           r1,[r2]
  786 000008D8         ;-------------------------update bullets enable
  787 000008D8 E59F8388        ldr              r8,=en_shooted
  788 000008DC E3A09000        mov              r9,#0
  789 000008E0 E5C89000        strb             r9,[r8]
  790 000008E4         
  791 000008E4         
  792 000008E4 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  793 000008E8 E12FFF1E        BX               LR
  794 000008EC         ;_______________________________ 
  795 000008EC         en_shot_hit0x7E
  796 000008EC E59F43B8        ldr              r4,=current_position
  797 000008F0 E5D45000        ldrb             r5,[r4]
  798 000008F4 E3550006        cmp              r5,#0x06
  799 000008F8 059F23B0        ldreq            r2,=lives
  800 000008FC 05D21000        ldrbeq           r1,[r2]
  801 00000900 02411001        subeq            r1,#1
  802 00000904 05C21000        strbeq           r1,[r2]
  803 00000908         ;-------------------------update bullets enable
  804 00000908 E59F8358        ldr              r8,=en_shooted
  805 0000090C E3A09000        mov              r9,#0
  806 00000910 E5C89000        strb             r9,[r8]
  807 00000914         
  808 00000914 E8BD43FF        LDMFD            sp!,{r0-r9,LR}



ARM Macro Assembler    Page 16 


  809 00000918 E12FFF1E        BX               LR
  810 0000091C         ;____________________________ 
  811 0000091C         en_shot_hit0x7F
  812 0000091C E59F4388        ldr              r4,=current_position
  813 00000920 E5D45000        ldrb             r5,[r4]
  814 00000924 E3550007        cmp              r5,#0x07
  815 00000928 059F2380        ldreq            r2,=lives
  816 0000092C 05D21000        ldrbeq           r1,[r2]
  817 00000930 02411001        subeq            r1,#1
  818 00000934 05C21000        strbeq           r1,[r2]
  819 00000938         ;-------------------------update bullets enable
  820 00000938 E59F8328        ldr              r8,=en_shooted
  821 0000093C E3A09000        mov              r9,#0
  822 00000940 E5C89000        strb             r9,[r8]
  823 00000944         
  824 00000944         
  825 00000944 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  826 00000948 E12FFF1E        BX               LR
  827 0000094C         ;________________________ 
  828 0000094C         en_shot_hit0x80
  829 0000094C E59F4358        ldr              r4,=current_position
  830 00000950 E5D45000        ldrb             r5,[r4]
  831 00000954 E3550008        cmp              r5,#0x08
  832 00000958 059F2350        ldreq            r2,=lives
  833 0000095C 05D21000        ldrbeq           r1,[r2]
  834 00000960 02411001        subeq            r1,#1
  835 00000964 05C21000        strbeq           r1,[r2]
  836 00000968         ;-------------------------update bullets enable
  837 00000968 E59F82F8        ldr              r8,=en_shooted
  838 0000096C E3A09000        mov              r9,#0
  839 00000970 E5C89000        strb             r9,[r8]
  840 00000974         
  841 00000974 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  842 00000978 E12FFF1E        BX               LR
  843 0000097C         ;_____________________ 
  844 0000097C         en_shot_hit0x81
  845 0000097C E59F4328        ldr              r4,=current_position
  846 00000980 E5D45000        ldrb             r5,[r4]
  847 00000984 E3550009        cmp              r5,#0x09
  848 00000988 059F2320        ldreq            r2,=lives
  849 0000098C 05D21000        ldrbeq           r1,[r2]
  850 00000990 02411001        subeq            r1,#1
  851 00000994 05C21000        strbeq           r1,[r2]
  852 00000998         ;-------------------------update bullets enable
  853 00000998 E59F82C8        ldr              r8,=en_shooted
  854 0000099C E3A09000        mov              r9,#0
  855 000009A0 E5C89000        strb             r9,[r8]
  856 000009A4         
  857 000009A4         
  858 000009A4 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  859 000009A8 E12FFF1E        BX               LR
  860 000009AC         ;_____________________ 
  861 000009AC         en_shot_hit0x82
  862 000009AC E59F42F8        ldr              r4,=current_position
  863 000009B0 E5D45000        ldrb             r5,[r4]
  864 000009B4 E355000A        cmp              r5,#0x0A
  865 000009B8 059F22F0        ldreq            r2,=lives
  866 000009BC 05D21000        ldrbeq           r1,[r2]
  867 000009C0 02411001        subeq            r1,#1



ARM Macro Assembler    Page 17 


  868 000009C4 05C21000        strbeq           r1,[r2]
  869 000009C8         ;-------------------------update bullets enable
  870 000009C8 E59F8298        ldr              r8,=en_shooted
  871 000009CC E3A09000        mov              r9,#0
  872 000009D0 E5C89000        strb             r9,[r8]
  873 000009D4         
  874 000009D4 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  875 000009D8 E12FFF1E        BX               LR
  876 000009DC         ;_________________- 
  877 000009DC         en_shot_hit0x83
  878 000009DC E59F42C8        ldr              r4,=current_position
  879 000009E0 E5D45000        ldrb             r5,[r4]
  880 000009E4 E355000B        cmp              r5,#0x0B
  881 000009E8 059F22C0        ldreq            r2,=lives
  882 000009EC 05D21000        ldrbeq           r1,[r2]
  883 000009F0 02411001        subeq            r1,#1
  884 000009F4 05C21000        strbeq           r1,[r2]
  885 000009F8         ;-------------------------update bullets enable
  886 000009F8 E59F8268        ldr              r8,=en_shooted
  887 000009FC E3A09000        mov              r9,#0
  888 00000A00 E5C89000        strb             r9,[r8]
  889 00000A04         
  890 00000A04         
  891 00000A04 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  892 00000A08 E12FFF1E        BX               LR
  893 00000A0C         ;_____________________ 
  894 00000A0C         en_shot_hit0x84
  895 00000A0C E59F4298        ldr              r4,=current_position
  896 00000A10 E5D45000        ldrb             r5,[r4]
  897 00000A14 E355000C        cmp              r5,#0x0C
  898 00000A18 059F2290        ldreq            r2,=lives
  899 00000A1C 05D21000        ldrbeq           r1,[r2]
  900 00000A20 02411001        subeq            r1,#1
  901 00000A24 05C21000        strbeq           r1,[r2]
  902 00000A28         ;-------------------------update bullets enable
  903 00000A28 E59F8238        ldr              r8,=en_shooted
  904 00000A2C E3A09000        mov              r9,#0
  905 00000A30 E5C89000        strb             r9,[r8]
  906 00000A34         
  907 00000A34         
  908 00000A34 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  909 00000A38 E12FFF1E        BX               LR
  910 00000A3C         ;_________________________ 
  911 00000A3C         en_shot_hit0x85
  912 00000A3C E59F4268        ldr              r4,=current_position
  913 00000A40 E5D45000        ldrb             r5,[r4]
  914 00000A44 E355000D        cmp              r5,#0x0D
  915 00000A48 059F2260        ldreq            r2,=lives
  916 00000A4C 05D21000        ldrbeq           r1,[r2]
  917 00000A50 02411001        subeq            r1,#1
  918 00000A54 05C21000        strbeq           r1,[r2]
  919 00000A58         ;-------------------------update bullets enable
  920 00000A58 E59F8208        ldr              r8,=en_shooted
  921 00000A5C E3A09000        mov              r9,#0
  922 00000A60 E5C89000        strb             r9,[r8]
  923 00000A64         
  924 00000A64         
  925 00000A64 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  926 00000A68 E12FFF1E        BX               LR



ARM Macro Assembler    Page 18 


  927 00000A6C         ;__________________________ 
  928 00000A6C         en_shot_hit0x86
  929 00000A6C E59F4238        ldr              r4,=current_position
  930 00000A70 E5D45000        ldrb             r5,[r4]
  931 00000A74 E355000E        cmp              r5,#0x0E
  932 00000A78 059F2230        ldreq            r2,=lives
  933 00000A7C 05D21000        ldrbeq           r1,[r2]
  934 00000A80 02411001        subeq            r1,#1
  935 00000A84 05C21000        strbeq           r1,[r2]
  936 00000A88         ;-------------------------update bullets enable
  937 00000A88 E59F81D8        ldr              r8,=en_shooted
  938 00000A8C E3A09000        mov              r9,#0
  939 00000A90 E5C89000        strb             r9,[r8]
  940 00000A94         
  941 00000A94         
  942 00000A94 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  943 00000A98 E12FFF1E        BX               LR
  944 00000A9C         ;_______________________ 
  945 00000A9C         en_shot_hit0x87
  946 00000A9C E59F4208        ldr              r4,=current_position
  947 00000AA0 E5D45000        ldrb             r5,[r4]
  948 00000AA4 E355000F        cmp              r5,#0x0F
  949 00000AA8 059F2200        ldreq            r2,=lives
  950 00000AAC 05D21000        ldrbeq           r1,[r2]
  951 00000AB0 02411001        subeq            r1,#1
  952 00000AB4 05C21000        strbeq           r1,[r2]
  953 00000AB8         ;-------------------------update bullets enable
  954 00000AB8 E59F81A8        ldr              r8,=en_shooted
  955 00000ABC E3A09000        mov              r9,#0
  956 00000AC0 E5C89000        strb             r9,[r8]
  957 00000AC4         
  958 00000AC4         
  959 00000AC4 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  960 00000AC8 E12FFF1E        BX               LR
  961 00000ACC         ;________________________-
  962 00000ACC         en_shot_hit0x88
  963 00000ACC E59F41D8        ldr              r4,=current_position
  964 00000AD0 E5D45000        ldrb             r5,[r4]
  965 00000AD4 E3550010        cmp              r5,#0x10
  966 00000AD8 059F21D0        ldreq            r2,=lives
  967 00000ADC 05D21000        ldrbeq           r1,[r2]
  968 00000AE0 02411001        subeq            r1,#1
  969 00000AE4 05C21000        strbeq           r1,[r2]
  970 00000AE8         ;-------------------------update bullets enable
  971 00000AE8 E59F8178        ldr              r8,=en_shooted
  972 00000AEC E3A09000        mov              r9,#0
  973 00000AF0 E5C89000        strb             r9,[r8]
  974 00000AF4         
  975 00000AF4         
  976 00000AF4 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  977 00000AF8 E12FFF1E        BX               LR
  978 00000AFC         ;_______________________________
  979 00000AFC         en_shot_hit0x89
  980 00000AFC E59F41A8        ldr              r4,=current_position
  981 00000B00 E5D45000        ldrb             r5,[r4]
  982 00000B04 E3550011        cmp              r5,#0x11
  983 00000B08 059F21A0        ldreq            r2,=lives
  984 00000B0C 05D21000        ldrbeq           r1,[r2]
  985 00000B10 02411001        subeq            r1,#1



ARM Macro Assembler    Page 19 


  986 00000B14 05C21000        strbeq           r1,[r2]
  987 00000B18         ;-------------------------update bullets enable
  988 00000B18 E59F8148        ldr              r8,=en_shooted
  989 00000B1C E3A09000        mov              r9,#0
  990 00000B20 E5C89000        strb             r9,[r8]
  991 00000B24         
  992 00000B24 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
  993 00000B28 E12FFF1E        BX               LR
  994 00000B2C         ;________________________________- 
  995 00000B2C         en_shot_hit0x8A
  996 00000B2C E59F4178        ldr              r4,=current_position
  997 00000B30 E5D45000        ldrb             r5,[r4]
  998 00000B34 E3550012        cmp              r5,#0x12
  999 00000B38 059F2170        ldreq            r2,=lives
 1000 00000B3C 05D21000        ldrbeq           r1,[r2]
 1001 00000B40 02411001        subeq            r1,#1
 1002 00000B44 05C21000        strbeq           r1,[r2]
 1003 00000B48         ;-------------------------update bullets enable
 1004 00000B48 E59F8118        ldr              r8,=en_shooted
 1005 00000B4C E3A09000        mov              r9,#0
 1006 00000B50 E5C89000        strb             r9,[r8]
 1007 00000B54         
 1008 00000B54         
 1009 00000B54 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
 1010 00000B58 E12FFF1E        BX               LR
 1011 00000B5C         ;___________________________ 
 1012 00000B5C         en_shot_hit0x8B
 1013 00000B5C E59F4148        ldr              r4,=current_position
 1014 00000B60 E5D45000        ldrb             r5,[r4]
 1015 00000B64 E3550014        cmp              r5,#0x14
 1016 00000B68 059F2140        ldreq            r2,=lives
 1017 00000B6C 05D21000        ldrbeq           r1,[r2]
 1018 00000B70 02411001        subeq            r1,#1
 1019 00000B74 05C21000        strbeq           r1,[r2]
 1020 00000B78         ;-------------------------update bullets enable
 1021 00000B78 E59F80E8        ldr              r8,=en_shooted
 1022 00000B7C E3A09000        mov              r9,#0
 1023 00000B80 E5C89000        strb             r9,[r8]
 1024 00000B84         
 1025 00000B84         
 1026 00000B84 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
 1027 00000B88 E12FFF1E        BX               LR
 1028 00000B8C         ;__________________________- 
 1029 00000B8C         
 1030 00000B8C         en_shot_hit0x8C
 1031 00000B8C E59F4118        ldr              r4,=current_position
 1032 00000B90 E5D45000        ldrb             r5,[r4]
 1033 00000B94 E3550015        cmp              r5,#0x15
 1034 00000B98 059F2110        ldreq            r2,=lives
 1035 00000B9C 05D21000        ldrbeq           r1,[r2]
 1036 00000BA0 02411001        subeq            r1,#1
 1037 00000BA4 05C21000        strbeq           r1,[r2]
 1038 00000BA8         ;-------------------------update bullets enable
 1039 00000BA8 E59F80B8        ldr              r8,=en_shooted
 1040 00000BAC E3A09000        mov              r9,#0
 1041 00000BB0 E5C89000        strb             r9,[r8]
 1042 00000BB4         
 1043 00000BB4         
 1044 00000BB4 E8BD43FF        LDMFD            sp!,{r0-r9,LR}



ARM Macro Assembler    Page 20 


 1045 00000BB8 E12FFF1E        BX               LR
 1046 00000BBC         ;---------------------------- 
 1047 00000BBC         
 1048 00000BBC         
 1049 00000BBC         
 1050 00000BBC         s_hit
 1051 00000BBC E2455019        sub              r5, #25
 1052 00000BC0 E7D59006        ldrb             r9,[r5,r6]
 1053 00000BC4 E3590057        cmp              r9,#0x57
 1054 00000BC8 0A000004        beq              done1
 1055 00000BCC E3A09020        mov              r9,#0x20
 1056 00000BD0 E7C59006        strb             r9,[r5,r6]
 1057 00000BD4         
 1058 00000BD4         ;-------------------------update bullets enable
 1059 00000BD4 E59F808C        ldr              r8,=en_shooted
 1060 00000BD8 E3A09000        mov              r9,#0
 1061 00000BDC E5C89000        strb             r9,[r8]
 1062 00000BE0         
 1063 00000BE0         done1
 1064 00000BE0 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
 1065 00000BE4 E12FFF1E        BX               LR
 1066 00000BE8         ;---------------------------- 
 1067 00000BE8         
 1068 00000BE8         S_hit
 1069 00000BE8 E2455019        sub              r5, #25
 1070 00000BEC E7D59006        ldrb             r9,[r5,r6]
 1071 00000BF0 E3590057        cmp              r9,#0x57
 1072 00000BF4 0A000004        beq              done
 1073 00000BF8 E3A09020        mov              r9,#0x20
 1074 00000BFC E7C59006        strb             r9,[r5,r6]
 1075 00000C00         ;-------------------------update bullets enable
 1076 00000C00 E59F8060        ldr              r8,=en_shooted
 1077 00000C04 E3A09000        mov              r9,#0
 1078 00000C08 E5C89000        strb             r9,[r8]
 1079 00000C0C         
 1080 00000C0C         done
 1081 00000C0C E8BD43FF        LDMFD            sp!,{r0-r9,LR}
 1082 00000C10 E12FFF1E        BX               LR
 1083 00000C14         ;----------------------------
 1084 00000C14         
 1085 00000C14         bull_hit
 1086 00000C14         
 1087 00000C14 E7C69005        strb             r9,[r6,r5]
 1088 00000C18 E3A0907E        mov              r9,#0x7E
 1089 00000C1C E7C69005        strb             r9,[r6,r5]
 1090 00000C20 E2455019        sub              r5, #25
 1091 00000C24 E3A09020        mov              r9,#0x20
 1092 00000C28         ;-------------------------update bullets enable
 1093 00000C28         
 1094 00000C28         
 1095 00000C28 E8BD43FF        LDMFD            sp!,{r0-r9,LR}
 1096 00000C2C E12FFF1E        BX               LR
 1097 00000C30         ;----------------------------
 1098 00000C30                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 



ARM Macro Assembler    Page 21 


              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000179 
              0000017A 
              0000017B 
              0000017D 
              0000017E 
              0000017F 
              00000181 
              00000182 
              00000183 
              00000185 
              00000186 
              00000187 
              00000189 
              0000018A 
              0000018B 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\enemy.d -o.\objects\enemy.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\C
MSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefi
ne="__UVISION_VERSION SETA 524" --list=.\listings\enemy.lst enemy.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

S_hit 00000BE8

Symbol: S_hit
   Definitions
      At line 1068 in file enemy.s
   Uses
      At line 624 in file enemy.s
Comment: S_hit used once
bull_hit 00000C14

Symbol: bull_hit
   Definitions
      At line 1085 in file enemy.s
   Uses
      At line 626 in file enemy.s
Comment: bull_hit used once
done 00000C0C

Symbol: done
   Definitions
      At line 1080 in file enemy.s
   Uses
      At line 1072 in file enemy.s
Comment: done used once
done1 00000BE0

Symbol: done1
   Definitions
      At line 1063 in file enemy.s
   Uses
      At line 1054 in file enemy.s
Comment: done1 used once
down_done 000003A8

Symbol: down_done
   Definitions
      At line 366 in file enemy.s
   Uses
      At line 360 in file enemy.s
Comment: down_done used once
down_skip 00000448

Symbol: down_skip
   Definitions
      At line 411 in file enemy.s
   Uses
      At line 323 in file enemy.s
Comment: down_skip used once
en_amount 00000034

Symbol: en_amount
   Definitions
      At line 59 in file enemy.s
   Uses
      At line 12 in file enemy.s
Comment: en_amount used once
en_bullets_pos 0000003C

Symbol: en_bullets_pos



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 64 in file enemy.s
   Uses
      At line 609 in file enemy.s
      At line 615 in file enemy.s

en_max_length 00000030

Symbol: en_max_length
   Definitions
      At line 57 in file enemy.s
   Uses
      At line 331 in file enemy.s
      At line 361 in file enemy.s

en_move_down 00000304

Symbol: en_move_down
   Definitions
      At line 310 in file enemy.s
   Uses
      At line 11 in file enemy.s
Comment: en_move_down used once
en_move_left 000001A4

Symbol: en_move_left
   Definitions
      At line 195 in file enemy.s
   Uses
      At line 10 in file enemy.s
Comment: en_move_left used once
en_move_right 00000044

Symbol: en_move_right
   Definitions
      At line 74 in file enemy.s
   Uses
      At line 9 in file enemy.s
Comment: en_move_right used once
en_shooted 00000040

Symbol: en_shooted
   Definitions
      At line 66 in file enemy.s
   Uses
      At line 600 in file enemy.s
      At line 718 in file enemy.s
      At line 735 in file enemy.s
      At line 753 in file enemy.s
      At line 770 in file enemy.s
      At line 787 in file enemy.s
      At line 804 in file enemy.s
      At line 820 in file enemy.s
      At line 837 in file enemy.s
      At line 853 in file enemy.s
      At line 870 in file enemy.s
      At line 886 in file enemy.s
      At line 903 in file enemy.s
      At line 920 in file enemy.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 937 in file enemy.s
      At line 954 in file enemy.s
      At line 971 in file enemy.s
      At line 988 in file enemy.s
      At line 1004 in file enemy.s
      At line 1021 in file enemy.s
      At line 1039 in file enemy.s
      At line 1059 in file enemy.s
      At line 1076 in file enemy.s

en_shot 0000067C

Symbol: en_shot
   Definitions
      At line 597 in file enemy.s
   Uses
      At line 25 in file enemy.s
Comment: en_shot used once
en_shot_hit0x79 000007FC

Symbol: en_shot_hit0x79
   Definitions
      At line 709 in file enemy.s
   Uses
      At line 643 in file enemy.s
Comment: en_shot_hit0x79 used once
en_shot_hit0x7A 0000082C

Symbol: en_shot_hit0x7A
   Definitions
      At line 726 in file enemy.s
   Uses
      At line 646 in file enemy.s
Comment: en_shot_hit0x7A used once
en_shot_hit0x7B 0000085C

Symbol: en_shot_hit0x7B
   Definitions
      At line 744 in file enemy.s
   Uses
      At line 649 in file enemy.s
Comment: en_shot_hit0x7B used once
en_shot_hit0x7C 0000088C

Symbol: en_shot_hit0x7C
   Definitions
      At line 761 in file enemy.s
   Uses
      At line 652 in file enemy.s
Comment: en_shot_hit0x7C used once
en_shot_hit0x7D 000008BC

Symbol: en_shot_hit0x7D
   Definitions
      At line 778 in file enemy.s
   Uses
      At line 655 in file enemy.s
Comment: en_shot_hit0x7D used once
en_shot_hit0x7E 000008EC



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: en_shot_hit0x7E
   Definitions
      At line 795 in file enemy.s
   Uses
      At line 658 in file enemy.s
Comment: en_shot_hit0x7E used once
en_shot_hit0x7F 0000091C

Symbol: en_shot_hit0x7F
   Definitions
      At line 811 in file enemy.s
   Uses
      At line 661 in file enemy.s
Comment: en_shot_hit0x7F used once
en_shot_hit0x80 0000094C

Symbol: en_shot_hit0x80
   Definitions
      At line 828 in file enemy.s
   Uses
      At line 664 in file enemy.s
Comment: en_shot_hit0x80 used once
en_shot_hit0x81 0000097C

Symbol: en_shot_hit0x81
   Definitions
      At line 844 in file enemy.s
   Uses
      At line 667 in file enemy.s
Comment: en_shot_hit0x81 used once
en_shot_hit0x82 000009AC

Symbol: en_shot_hit0x82
   Definitions
      At line 861 in file enemy.s
   Uses
      At line 670 in file enemy.s
Comment: en_shot_hit0x82 used once
en_shot_hit0x83 000009DC

Symbol: en_shot_hit0x83
   Definitions
      At line 877 in file enemy.s
   Uses
      At line 673 in file enemy.s
Comment: en_shot_hit0x83 used once
en_shot_hit0x84 00000A0C

Symbol: en_shot_hit0x84
   Definitions
      At line 894 in file enemy.s
   Uses
      At line 676 in file enemy.s
Comment: en_shot_hit0x84 used once
en_shot_hit0x85 00000A3C

Symbol: en_shot_hit0x85
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 911 in file enemy.s
   Uses
      At line 679 in file enemy.s
Comment: en_shot_hit0x85 used once
en_shot_hit0x86 00000A6C

Symbol: en_shot_hit0x86
   Definitions
      At line 928 in file enemy.s
   Uses
      At line 682 in file enemy.s
Comment: en_shot_hit0x86 used once
en_shot_hit0x87 00000A9C

Symbol: en_shot_hit0x87
   Definitions
      At line 945 in file enemy.s
   Uses
      At line 685 in file enemy.s
Comment: en_shot_hit0x87 used once
en_shot_hit0x88 00000ACC

Symbol: en_shot_hit0x88
   Definitions
      At line 962 in file enemy.s
   Uses
      At line 688 in file enemy.s
Comment: en_shot_hit0x88 used once
en_shot_hit0x89 00000AFC

Symbol: en_shot_hit0x89
   Definitions
      At line 979 in file enemy.s
   Uses
      At line 691 in file enemy.s
Comment: en_shot_hit0x89 used once
en_shot_hit0x8A 00000B2C

Symbol: en_shot_hit0x8A
   Definitions
      At line 995 in file enemy.s
   Uses
      At line 694 in file enemy.s
Comment: en_shot_hit0x8A used once
en_shot_hit0x8B 00000B5C

Symbol: en_shot_hit0x8B
   Definitions
      At line 1012 in file enemy.s
   Uses
      At line 697 in file enemy.s
Comment: en_shot_hit0x8B used once
en_shot_hit0x8C 00000B8C

Symbol: en_shot_hit0x8C
   Definitions
      At line 1030 in file enemy.s
   Uses
      At line 700 in file enemy.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

Comment: en_shot_hit0x8C used once
enemy 00000000

Symbol: enemy
   Definitions
      At line 1 in file enemy.s
   Uses
      None
Comment: enemy unused
fin 000000C0

Symbol: fin
   Definitions
      At line 115 in file enemy.s
   Uses
      At line 113 in file enemy.s
Comment: fin used once
fin2 0000010C

Symbol: fin2
   Definitions
      At line 141 in file enemy.s
   Uses
      At line 138 in file enemy.s
Comment: fin2 used once
how_many_down_move_left 00000000

Symbol: how_many_down_move_left
   Definitions
      At line 27 in file enemy.s
   Uses
      At line 15 in file enemy.s
      At line 320 in file enemy.s
      At line 376 in file enemy.s

left2 000004C0

Symbol: left2
   Definitions
      At line 455 in file enemy.s
   Uses
      At line 429 in file enemy.s
Comment: left2 used once
left2_num 00000021

Symbol: left2_num
   Definitions
      At line 46 in file enemy.s
   Uses
      None
Comment: left2_num unused
left2_topmost 00000008

Symbol: left2_topmost
   Definitions
      At line 32 in file enemy.s
   Uses
      At line 18 in file enemy.s
      At line 156 in file enemy.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

      At line 274 in file enemy.s
      At line 386 in file enemy.s
      At line 469 in file enemy.s

left3 00000524

Symbol: left3
   Definitions
      At line 486 in file enemy.s
   Uses
      At line 431 in file enemy.s
      At line 459 in file enemy.s

left3_num 00000022

Symbol: left3_num
   Definitions
      At line 47 in file enemy.s
   Uses
      None
Comment: left3_num unused
left3_topmost 0000000C

Symbol: left3_topmost
   Definitions
      At line 34 in file enemy.s
   Uses
      At line 19 in file enemy.s
      At line 160 in file enemy.s
      At line 278 in file enemy.s
      At line 390 in file enemy.s
      At line 498 in file enemy.s

left4 00000580

Symbol: left4
   Definitions
      At line 513 in file enemy.s
   Uses
      At line 433 in file enemy.s
      At line 461 in file enemy.s
      At line 490 in file enemy.s

left4_num 00000023

Symbol: left4_num
   Definitions
      At line 48 in file enemy.s
   Uses
      None
Comment: left4_num unused
left4_topmost 00000010

Symbol: left4_topmost
   Definitions
      At line 36 in file enemy.s
   Uses
      At line 20 in file enemy.s
      At line 164 in file enemy.s



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

      At line 282 in file enemy.s
      At line 394 in file enemy.s
      At line 523 in file enemy.s

left5 000005D4

Symbol: left5
   Definitions
      At line 538 in file enemy.s
   Uses
      At line 435 in file enemy.s
      At line 463 in file enemy.s
      At line 492 in file enemy.s
      At line 517 in file enemy.s
      At line 570 in file enemy.s

left5_num 00000024

Symbol: left5_num
   Definitions
      At line 49 in file enemy.s
   Uses
      None
Comment: left5_num unused
left5_topmost 00000014

Symbol: left5_topmost
   Definitions
      At line 38 in file enemy.s
   Uses
      At line 21 in file enemy.s
      At line 168 in file enemy.s
      At line 286 in file enemy.s
      At line 398 in file enemy.s
      At line 546 in file enemy.s

left6 00000620

Symbol: left6
   Definitions
      At line 561 in file enemy.s
   Uses
      At line 437 in file enemy.s
      At line 465 in file enemy.s
      At line 494 in file enemy.s
      At line 519 in file enemy.s
      At line 542 in file enemy.s

left6_num 00000025

Symbol: left6_num
   Definitions
      At line 50 in file enemy.s
   Uses
      None
Comment: left6_num unused
left6_topmost 00000018

Symbol: left6_topmost



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 40 in file enemy.s
   Uses
      At line 22 in file enemy.s
      At line 172 in file enemy.s
      At line 290 in file enemy.s
      At line 402 in file enemy.s
      At line 572 in file enemy.s

left7 00000674

Symbol: left7
   Definitions
      At line 588 in file enemy.s
   Uses
      At line 439 in file enemy.s
      At line 467 in file enemy.s
      At line 496 in file enemy.s
      At line 521 in file enemy.s
      At line 544 in file enemy.s
      At line 565 in file enemy.s

left7_num 00000026

Symbol: left7_num
   Definitions
      At line 51 in file enemy.s
   Uses
      None
Comment: left7_num unused
left7_topmost 0000001C

Symbol: left7_topmost
   Definitions
      At line 42 in file enemy.s
   Uses
      At line 23 in file enemy.s
      At line 176 in file enemy.s
      At line 294 in file enemy.s
      At line 406 in file enemy.s

left_fin 00000220

Symbol: left_fin
   Definitions
      At line 233 in file enemy.s
   Uses
      At line 231 in file enemy.s
Comment: left_fin used once
left_fin2 0000026C

Symbol: left_fin2
   Definitions
      At line 259 in file enemy.s
   Uses
      At line 256 in file enemy.s
Comment: left_fin2 used once
left_most_colum 00000038




ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Relocatable symbols

Symbol: left_most_colum
   Definitions
      At line 61 in file enemy.s
   Uses
      At line 24 in file enemy.s
      At line 426 in file enemy.s
      At line 456 in file enemy.s
      At line 487 in file enemy.s
      At line 514 in file enemy.s
      At line 539 in file enemy.s
      At line 562 in file enemy.s
      At line 567 in file enemy.s

left_num 00000020

Symbol: left_num
   Definitions
      At line 45 in file enemy.s
   Uses
      None
Comment: left_num unused
left_pos 0000002C

Symbol: left_pos
   Definitions
      At line 55 in file enemy.s
   Uses
      At line 13 in file enemy.s
      At line 94 in file enemy.s
      At line 124 in file enemy.s
      At line 147 in file enemy.s
      At line 199 in file enemy.s
      At line 211 in file enemy.s
      At line 241 in file enemy.s
      At line 261 in file enemy.s
      At line 328 in file enemy.s
      At line 372 in file enemy.s
      At line 446 in file enemy.s
      At line 474 in file enemy.s
      At line 503 in file enemy.s
      At line 528 in file enemy.s
      At line 551 in file enemy.s
      At line 577 in file enemy.s

left_topmost 00000004

Symbol: left_topmost
   Definitions
      At line 30 in file enemy.s
   Uses
      At line 17 in file enemy.s
      At line 152 in file enemy.s
      At line 270 in file enemy.s
      At line 382 in file enemy.s
      At line 441 in file enemy.s
      At line 604 in file enemy.s

leftloop 000001F0




ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Relocatable symbols

Symbol: leftloop
   Definitions
      At line 220 in file enemy.s
   Uses
      At line 232 in file enemy.s
      At line 257 in file enemy.s

mo_col 00000348

Symbol: mo_col
   Definitions
      At line 336 in file enemy.s
   Uses
      At line 346 in file enemy.s
      At line 364 in file enemy.s

re_s 00000370

Symbol: re_s
   Definitions
      At line 348 in file enemy.s
   Uses
      None
Comment: re_s unused
right_pos 00000028

Symbol: right_pos
   Definitions
      At line 53 in file enemy.s
   Uses
      At line 14 in file enemy.s
      At line 78 in file enemy.s
      At line 93 in file enemy.s
      At line 123 in file enemy.s
      At line 143 in file enemy.s
      At line 212 in file enemy.s
      At line 242 in file enemy.s
      At line 265 in file enemy.s
      At line 326 in file enemy.s
      At line 368 in file enemy.s

rightloop 00000090

Symbol: rightloop
   Definitions
      At line 102 in file enemy.s
   Uses
      At line 114 in file enemy.s
      At line 139 in file enemy.s

rowloop 000000D0

Symbol: rowloop
   Definitions
      At line 122 in file enemy.s
   Uses
      None
Comment: rowloop unused
rowloop2 00000230



ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Relocatable symbols


Symbol: rowloop2
   Definitions
      At line 240 in file enemy.s
   Uses
      None
Comment: rowloop2 unused
s_hit 00000BBC

Symbol: s_hit
   Definitions
      At line 1050 in file enemy.s
   Uses
      At line 622 in file enemy.s
Comment: s_hit used once
shooting 000006B4

Symbol: shooting
   Definitions
      At line 614 in file enemy.s
   Uses
      At line 603 in file enemy.s
Comment: shooting used once
skip_en_left 000002FC

Symbol: skip_en_left
   Definitions
      At line 298 in file enemy.s
   Uses
      At line 208 in file enemy.s
Comment: skip_en_left used once
skip_en_right 0000019C

Symbol: skip_en_right
   Definitions
      At line 180 in file enemy.s
   Uses
      At line 89 in file enemy.s
Comment: skip_en_right used once
update_en_status 00000450

Symbol: update_en_status
   Definitions
      At line 423 in file enemy.s
   Uses
      At line 16 in file enemy.s
Comment: update_en_status used once
74 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Initial_board 00000000

Symbol: Initial_board
   Definitions
      At line 2 in file enemy.s
   Uses
      At line 77 in file enemy.s
      At line 198 in file enemy.s
      At line 325 in file enemy.s
      At line 443 in file enemy.s
      At line 471 in file enemy.s
      At line 500 in file enemy.s
      At line 525 in file enemy.s
      At line 548 in file enemy.s
      At line 574 in file enemy.s
      At line 619 in file enemy.s

current_position 00000000

Symbol: current_position
   Definitions
      At line 5 in file enemy.s
   Uses
      At line 710 in file enemy.s
      At line 727 in file enemy.s
      At line 745 in file enemy.s
      At line 762 in file enemy.s
      At line 779 in file enemy.s
      At line 796 in file enemy.s
      At line 812 in file enemy.s
      At line 829 in file enemy.s
      At line 845 in file enemy.s
      At line 862 in file enemy.s
      At line 878 in file enemy.s
      At line 895 in file enemy.s
      At line 912 in file enemy.s
      At line 929 in file enemy.s
      At line 946 in file enemy.s
      At line 963 in file enemy.s
      At line 980 in file enemy.s
      At line 996 in file enemy.s
      At line 1013 in file enemy.s
      At line 1031 in file enemy.s

lives 00000000

Symbol: lives
   Definitions
      At line 8 in file enemy.s
   Uses
      At line 713 in file enemy.s
      At line 730 in file enemy.s
      At line 748 in file enemy.s
      At line 765 in file enemy.s
      At line 782 in file enemy.s
      At line 799 in file enemy.s
      At line 815 in file enemy.s
      At line 832 in file enemy.s
      At line 848 in file enemy.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 865 in file enemy.s
      At line 881 in file enemy.s
      At line 898 in file enemy.s
      At line 915 in file enemy.s
      At line 932 in file enemy.s
      At line 949 in file enemy.s
      At line 966 in file enemy.s
      At line 983 in file enemy.s
      At line 999 in file enemy.s
      At line 1016 in file enemy.s
      At line 1034 in file enemy.s

next_move 00000000

Symbol: next_move
   Definitions
      At line 3 in file enemy.s
   Uses
      At line 85 in file enemy.s
      At line 204 in file enemy.s
      At line 313 in file enemy.s

output_character 00000000

Symbol: output_character
   Definitions
      At line 4 in file enemy.s
   Uses
      None
Comment: output_character unused
rng 00000000

Symbol: rng
   Definitions
      At line 6 in file enemy.s
   Uses
      At line 606 in file enemy.s
Comment: rng used once
score 00000000

Symbol: score
   Definitions
      At line 7 in file enemy.s
   Uses
      None
Comment: score unused
7 symbols
415 symbols in table
